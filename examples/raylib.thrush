/* ******************************************************************************************
*
*   Raylib Speedrun - Basic window
*
*   Copyright (c) 2025 Kevin Benavides
*
******************************************************************************************* */

fn InitWindow(width: u32, height: u32, title: const ptr[array[char]]) void @public @extern("InitWindow");
fn WindowShouldClose() bool @public @extern("WindowShouldClose");
fn SetTargetFPS(fps: u32) void @public @extern("SetTargetFPS");

fn BeginDrawing() void @public @extern("BeginDrawing");
fn EndDrawing() void @public @extern("EndDrawing");
fn CloseWindow() void @public @extern("CloseWindow");

//------------------------------------------------------------------------------------
// Program main entry point
//------------------------------------------------------------------------------------

fn main() u32 {
        
    // Initialization
    //--------------------------------------------------------------------------------------    

    const screenWidth: u32 = 800;
    const screenHeight: u32 = 450;

    InitWindow(screenWidth, screenHeight, "Hello Raylib! From Thrush üê¶!");

    SetTargetFPS(60);                // Set our game to run at 60 frames-per-second
    //--------------------------------------------------------------------------------------

    // Main game loop
    while !WindowShouldClose() {

        // Update
        //----------------------------------------------------------------------------------
        // TODO: Update your variables here
        //----------------------------------------------------------------------------------

        // Draw
        //----------------------------------------------------------------------------------
        BeginDrawing();
        //----------------------------------------------------------------------------------
        EndDrawing();

    }

    // De-Initialization
    //--------------------------------------------------------------------------------------
    CloseWindow();        // Close window and OpenGL context
    //--------------------------------------------------------------------------------------

    return 0;

}
